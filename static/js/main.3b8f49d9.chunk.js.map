{"version":3,"sources":["twitter.svg","tumblr.svg","components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","useState","quote","setQuote","author","setAuthor","useEffect","getQuote","fetch","then","res","json","data","dataQuotes","quotes","randomQuote","Math","floor","random","length","id","className","href","src","twitter","alt","tumblr","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAAe,MAA0B,oCCA1B,MAA0B,mC,OC4D1BA,EApDA,WAEP,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNC,MACF,IAEF,IAAMA,EAAW,WAEbC,MADO,8IAENC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAIC,EAAaD,EAAKE,OAElBC,EAAcF,EADFG,KAAKC,MAAMD,KAAKE,SAASL,EAAWM,SAEpDhB,EAASY,EAAYb,OACrBG,EAAUU,EAAYX,YAUlC,OACI,sBAAKgB,GAAG,YAAR,UACI,qBAAKA,GAAG,OAAR,SACA,4BAAIlB,MAGJ,qBAAKkB,GAAG,SAAR,SACA,4BAAIhB,MAGJ,sBAAKgB,GAAG,UAAR,UACI,sBAAKC,UAAY,eAAjB,UACA,mBAAGC,KAAK,IAAIF,GAAG,aAAf,SACI,+BAAM,qBAAKG,IAAKC,EAASC,IAAI,SAEjC,mBAAGH,KAAK,IAAIF,GAAG,eAAf,SACI,+BAAM,qBAAKG,IAAKG,EAAQD,IAAI,YAGhC,wBAAQE,QAxBI,WAChBpB,KAuBoCa,GAAG,YAAnC,8BC5CDQ,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCMSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3b8f49d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter.8a050818.svg\";","export default __webpack_public_path__ + \"static/media/tumblr.356ede60.svg\";","\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nimport twitter from \"../twitter.svg\";\r\nimport tumblr from \"../tumblr.svg\";\r\n\r\n\r\n\r\nconst Quotes = () => {\r\n\r\n        const [quote, setQuote]= useState(\"\");\r\n        const [author, setAuthor]= useState(\"\");\r\n\r\n        useEffect(()=> {\r\n            getQuote()\r\n        },[]);\r\n\r\n        const getQuote = () => {\r\n            let url =` https://gist.githubusercontent.com/carmandomx/3d7ac5f15af87a587e1d25f5ba96de61/raw/e2d848b87c730a580077de221666343c15b1a243/gistfile1.txt`;\r\n            fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let dataQuotes = data.quotes;\r\n                let randomNum = Math.floor(Math.random()*dataQuotes.length);\r\n                let randomQuote = dataQuotes[randomNum];\r\n                setQuote(randomQuote.quote);\r\n                setAuthor(randomQuote.author);\r\n            })\r\n        }\r\n\r\n\r\n        const handleClick = ()=> {\r\n            getQuote();\r\n        }\r\n\r\n\r\n    return (\r\n        <div id=\"quote-box\">\r\n            <div id=\"text\">\r\n            <p>{quote}</p> \r\n            </div> \r\n\r\n            <div id=\"author\">\r\n            <p>{author}</p> \r\n            </div>\r\n\r\n            <div id=\"buttons\">\r\n                <div className = \"social-media\">\r\n                <a href=\"#\" id=\"twit-quote\">\r\n                    <span><img src={twitter} alt=\"\"/></span>\r\n                </a>\r\n                <a href=\"#\" id=\"tumblr-quote\">\r\n                    <span><img src={tumblr} alt=\"\"/></span>\r\n                </a>\r\n                </div> \r\n                <button onClick = {handleClick} id=\"new-quote\">New Quote</button>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\nexport default Quotes;","import './App.css';\nimport Quotes from './components/Quotes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quotes/> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}